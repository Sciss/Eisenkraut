{\rtf1\mac\ansicpg10000\cocoartf824\cocoasubrtf420
{\fonttbl\f0\fnil\fcharset77 Monaco;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue191;\red191\green0\blue0;\red0\green115\blue0;
\red96\green96\blue96;}
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural

\f0\fs18 \cf0 e = \cf2 Eisenkraut\cf0 .default;\
e.addr.connect;\
\
\cf3 // queries all markers of the active document\cf0 \
(\
~pos = \cf2 List\cf0 .new;\
fork \{\
	\cf2 var\cf0  msg, rate, num, startIdx, stopIdx;\
	msg = e.query( \cf4 '/doc/active/timeline'\cf0 , \cf4 \\rate\cf0  );\
	if( msg.notNil, \{\
		rate = msg[ 0 ];\
		msg = e.query( \cf4 '/doc/active/markers'\cf0 , \cf4 \\count\cf0  );\
		if( msg.notNil, \{\
			num = msg[ 0 ];\
			(\cf5 "Number of markers: "\cf0 ++num).postln;\
			startIdx = 0;\
			\cf3 // maximum 128 markers per query, based on an estimated of maximum marker names ...\cf0 \
			\cf3 // 128 * (32 + 4 + 5) + headerSize = ca. 5000 bytes\cf0 \
			stopIdx = min( num, startIdx + 128 );\
			while(\{ startIdx < num \}, \{\
				msg = e.get( \cf4 '/doc/active/markers'\cf0 , [ \cf4 \\range\cf0 , startIdx, stopIdx ]);\
				if( msg.notNil, \{\
					msg.pairsDo(\{ \cf2 arg\cf0  pos, name;\
						(\cf5 "Marker '"\cf0 ++name++\cf5 "' at frame "\cf0 ++pos++\cf5 " = "\cf0 ++(pos/rate).asTimeString( 0.001 )).postln;\
						~pos.add( pos );\
					\});\
				\}, \{\
					\cf5 "timeout"\cf0 .warn;\
				\});\
				startIdx	= stopIdx;\
				stopIdx	= min( num, startIdx + 128 );\
			\});\
		\}, \{\
			\cf5 "timeout"\cf0 .warn;\
		\});\
	\}, \{\
		\cf5 "timeout"\cf0 .warn;\
	\});\
\}\
)\
\
\cf3 // store marker positions as compile string\cf0 \
f = \cf2 File\cf0 ( \cf5 "~/Desktop/marks.txt"\cf0 .standardizePath, \cf5 "w"\cf0  );\
f.write( ~pos.asCompileString );\
f.close;\
\
~pos.size;\
\
\
\cf3 // reload marker positions from compile string file\cf0 \
f = \cf2 File\cf0 ( \cf5 "~/Desktop/marks.txt"\cf0 .standardizePath, \cf5 "r"\cf0  );\
~pos = f.readAllString.interpret;\
f.close;\
\cf3 // send them to the current document\cf0 \
\pard\tx480\tx960\tx1440\tx1920\tx2400\tx2880\tx3360\tx3840\tx4320\tx4800\tx5280\tx5760\tx6240\tx6720\tx7200\tx7680\tx8160\tx8640\tx9120\tx9600\tx10080\tx10560\tx11040\tx11520\tx12000\tx12480\tx12960\tx13440\tx13920\tx14400\tx14880\tx15360\tx15840\tx16320\tx16800\tx17280\tx17760\tx18240\tx18720\tx19200\tx19680\tx20160\tx20640\tx21120\tx21600\tx22080\tx22560\tx23040\tx23520\tx24000\tx24480\tx24960\tx25440\tx25920\tx26400\tx26880\tx27360\tx27840\tx28320\tx28800\tx29280\tx29760\tx30240\tx30720\tx31200\tx31680\tx32160\tx32640\tx33120\tx33600\tx34080\tx34560\tx35040\tx35520\tx36000\tx36480\tx36960\tx37440\tx37920\tx38400\tx38880\tx39360\tx39840\tx40320\tx40800\tx41280\tx41760\tx42240\tx42720\tx43200\tx43680\tx44160\tx44640\tx45120\tx45600\tx46080\tx46560\tx47040\tx47520\tx48000\ql\qnatural\pardirnatural
\cf0 ~pos.clump(128).do(\{ \cf2 arg\cf0  posList; \cf2 var\cf0  marks; marks = (posList ++ \cf5 "Mark"\cf0 .dup(posList.size)).unlace(posList.size).flatten; e.listSendMsg([ \cf4 '/doc/active/markers'\cf0 , \cf4 \\add\cf0  ] ++ marks )\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\pard\tx480\tx960\tx1440\tx1920\tx2400\tx2880\tx3360\tx3840\tx4320\tx4800\tx5280\tx5760\tx6240\tx6720\tx7200\tx7680\tx8160\tx8640\tx9120\tx9600\tx10080\tx10560\tx11040\tx11520\tx12000\tx12480\tx12960\tx13440\tx13920\tx14400\tx14880\tx15360\tx15840\tx16320\tx16800\tx17280\tx17760\tx18240\tx18720\tx19200\tx19680\tx20160\tx20640\tx21120\tx21600\tx22080\tx22560\tx23040\tx23520\tx24000\tx24480\tx24960\tx25440\tx25920\tx26400\tx26880\tx27360\tx27840\tx28320\tx28800\tx29280\tx29760\tx30240\tx30720\tx31200\tx31680\tx32160\tx32640\tx33120\tx33600\tx34080\tx34560\tx35040\tx35520\tx36000\tx36480\tx36960\tx37440\tx37920\tx38400\tx38880\tx39360\tx39840\tx40320\tx40800\tx41280\tx41760\tx42240\tx42720\tx43200\tx43680\tx44160\tx44640\tx45120\tx45600\tx46080\tx46560\tx47040\tx47520\tx48000\ql\qnatural\pardirnatural
\cf0 ~pos.clump(128).do(\{ \cf2 arg\cf0  posList; \cf2 var\cf0  marks; marks = posList.collect(\{ arg elem, i; [ elem, if( i.even, "Beg", "End" )]\}).flatten; e.listSendMsg([ \cf4 '/doc/active/markers'\cf0 , \cf4 \\add\cf0  ] ++ marks )\});\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\ql\qnatural\pardirnatural
\cf0 \
\cf3 // next place timeline position at the nearest marker before current position\cf0 \
(\
fork \{\
	\cf2 var\cf0  msg, oldpos, nextIdx, newPos;\
	msg = e.query( \cf4 '/doc/active/timeline'\cf0 , \cf4 \\position\cf0  );\
	if( msg.notNil, \{\
		oldpos = msg[ 0 ];\
		msg = e.get( \cf4 '/doc/active/markers'\cf0 , [ \cf4 \\indexof\cf0 , oldpos ]);\
		if( msg.notNil, \{\
			nextIdx = msg[ 0 ];\
			if( nextIdx < 0, \{ nextIdx = (nextIdx + 2).neg; \});\
			if( nextIdx < 0, \{\
				newPos = 0;\
			\}, \{\
				msg = e.get( \cf4 '/doc/active/markers'\cf0 , [ \cf4 \\at\cf0 , nextIdx ]);\
				if( msg.notNil, \{\
					newPos = msg[ 1 ];\
				\}, \{\
					\cf5 "timeout"\cf0 .warn;\
					newPos = -1;\
				\});\
			\});\
			if( newPos >= 0, \{\
				e.sendMsg( \cf4 '/doc/active/timeline'\cf0 , \cf4 \\position\cf0 , newPos );\
				(\cf5 "new position: "\cf0 ++newPos).postln;\
			\});\
		\}, \{\
			\cf5 "timeout"\cf0 .warn;\
		\});\
	\}, \{\
		\cf5 "timeout"\cf0 .warn;\
	\});\
\}\
)\
\
e.sendMsg( \cf4 '/main'\cf0 , \cf4 \\quit\cf0  );\
\
\
\
\
e.sendBundle( \cf2 nil\cf0 , [ \cf4 '/doc/active/timeline'\cf0 , \cf4 \\select\cf0 , 44100 * 6, 44100 * 12 ], [ \cf4 '/doc/active'\cf0 , \cf4 \\delete\cf0  ]);\
\
\
e.sendMsg( \cf4 '/main'\cf0 , \cf4 \\quit\cf0  );\
}